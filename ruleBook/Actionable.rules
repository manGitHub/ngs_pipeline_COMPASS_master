# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

############
#       Actionable
############
rule Actionable_Somatic:
	priority: 50
	input:
		somatic       = "{subject}/{TIME}/{subject}/db/{subject}.somatic",
		annotation    = "{subject}/{TIME}/annotation/{subject}.Annotations.coding.rare.txt",
		refFile       = config["annovar_data"]+config["somaticActSites"],
		combinedList  = config["annovar_data"]+config["geneList"],
		annotate      = NGS_PIPELINE + "/scripts/addAnnotations2vcf.pl",
		convertor     = NGS_PIPELINE + "/scripts/" + config["Actionable_mutation"],
	output:
		somatic="{subject}/{TIME}/{ACT_DIR}{subject}.somatic.actionable.txt",
	params:
		rulename  = "Actionable_Somatic",
		batch    = config[config['host']]['job_default']
	shell: """
	#######################
	perl {input.convertor} somatic  {input.refFile} {input.combinedList} {input.somatic} {input.annotation} >{output.somatic}
	#######################
	"""
############
#       Actionable
############
rule Actionable_Germline:
	input:
		germline  ="{subject}/{TIME}/{subject}/db/{subject}.germline",
		annotation="{subject}/{TIME}/annotation/{subject}.Annotations.coding.rare.txt",
		annotate =NGS_PIPELINE + "/scripts/addAnnotations2vcf.pl",
		convertor=NGS_PIPELINE + "/scripts/" + config["Actionable_mutation"],
		hotspot= config["annovar_data"]+config["somaticActSites"],
		combinedList  = config["annovar_data"]+config["geneList"],
		combine=NGS_PIPELINE + "/scripts/germlineOnly.pl"
	output:
		germline="{subject}/{TIME}/{ACT_DIR}{subject}.germline.actionable.txt",
	params:
		rulename = "Actionable_Germline",
		batch    = config[config['host']]['job_default'],
		status   = lambda wildcards: DECIDE_GL[wildcards.subject]
	shell: """
	#######################
	if [ {params.status} == 'gl_only' ]
	then
		if [ -e {wildcards.subject}/{TIME}/{wildcards.subject}/db/{wildcards.subject}.somatic ]
		then
			perl {input.convertor} germline {wildcards.subject}/{TIME}/{wildcards.subject}/db/{wildcards.subject}.somatic {input.germline} {input.annotation} {input.combinedList} {input.hotspot} > {output.germline}
		else
			touch {input.germline}.dummy
			perl {input.convertor} germline {input.germline}.dummy {input.germline} {input.annotation} {input.combinedList} {input.hotspot} >{output.germline}
			rm -rf {input.germline}.dummy
		fi
	else
		touch {input.germline}.dummy
		perl {input.convertor} germline {input.germline}.dummy {input.germline} {input.annotation} {input.combinedList} {input.hotspot} > {output.germline}.gl
		perl {input.convertor} somatic  {input.hotspot} {input.combinedList}  {input.germline} {input.annotation} >{output.germline}.som
		perl {input.combine} {output.germline}.gl {output.germline}.som  >{output.germline}
		rm -rf {output.germline}.gl {output.germline}.som {input.germline}.dummy
	fi
	#######################
	"""
############
#       Actionable
############
rule Actionable_RNAseq:
	input:
		rnaseq    ="{subject}/{TIME}/{subject}/db/{subject}.rnaseq",
		annotation="{subject}/{TIME}/annotation/{subject}.Annotations.coding.rare.txt",
		annotate  =NGS_PIPELINE + "/scripts/addAnnotations2vcf.pl",
		convertor =NGS_PIPELINE + "/scripts/" + config["Actionable_mutation"],
		hotspot= config["annovar_data"]+config["somaticActSites"],
		combinedList  = config["annovar_data"]+config["geneList"],
		combine=NGS_PIPELINE + "/scripts/germlineOnly.pl"
	output:
		rnaseq="{subject}/{TIME}/{ACT_DIR}{subject}.rnaseq.actionable.txt",
	params:
		rulename  = "Actionable_RNAseq",
		batch    = config[config['host']]['job_default']
	shell: """
	#######################
	touch {input.rnaseq}.dummy
	perl {input.convertor} rnaseq {input.rnaseq}.dummy {input.rnaseq} {input.annotation} {input.combinedList} {input.hotspot} > {output.rnaseq}.gl
	perl {input.convertor} somatic  {input.hotspot} {input.combinedList}  {input.rnaseq} {input.annotation} >{output.rnaseq}.som
	perl {input.combine} {output.rnaseq}.gl {output.rnaseq}.som  >{output.rnaseq}
	rm -rf {output.rnaseq}.gl {output.rnaseq}.som {input.rnaseq}.dummy
	#######################
	"""
############
#       Actionable
############
rule Actionable_Variants:
	input:
		rnaseq    ="{subject}/{TIME}/{subject}/db/{subject}.variants",
		annotation="{subject}/{TIME}/annotation/{subject}.Annotations.coding.rare.txt",
		annotate  =NGS_PIPELINE + "/scripts/addAnnotations2vcf.pl",
		convertor =NGS_PIPELINE + "/scripts/" + config["Actionable_mutation"],
		hotspot= config["annovar_data"]+config["somaticActSites"],
		combinedList  = config["annovar_data"]+config["geneList"],
		combine=NGS_PIPELINE + "/scripts/germlineOnly.pl"
	output:
		rnaseq="{subject}/{TIME}/{ACT_DIR}{subject}.variants.actionable.txt",
	params:
		rulename  = "Actionable_Variants",
		batch    = config[config['host']]['job_default']
	shell: """
	#######################
	touch {input.rnaseq}.dummy
	perl {input.convertor} rnaseq {input.rnaseq}.dummy {input.rnaseq} {input.annotation} {input.combinedList} {input.hotspot} > {output.rnaseq}.gl
	perl {input.convertor} somatic  {input.hotspot} {input.combinedList}  {input.rnaseq} {input.annotation} >{output.rnaseq}.som
	perl {input.combine} {output.rnaseq}.gl {output.rnaseq}.som  >{output.rnaseq}
	rm -rf {output.rnaseq}.gl {output.rnaseq}.som {input.rnaseq}.dummy
	#######################
	"""
############
#	**END**
############
