# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

UNION_SOM_MUT={}
if 'sample_references' in config:
    for sample in config['sample_references'].keys():
        subject=SAMPLE_TO_SUBJECT[sample]
        if config['sample_captures'][sample] not in config['Panel_List']: 
        #This condition constrains the rule to generate annotatedFull and unionSomaticVarsFull output for only exomes(libraries generated using the kits in the Panel_List are excluded, keeping this rule consistent with mutational signature rule). Removing this line of code will cause the rule to generate the 2 files for all paired tumor samples.   
            ## use Full annotated files, same as in Mutation Burden
            local =[(subject+"/"+TIME+"/"+sample+"/calls/"+sample+".strelka.snvs.annotatedFull.txt"),(subject+"/"+TIME+"/"+sample+"/calls/"+sample+".strelka.indels.annotatedFull.txt"),(subject+"/"+TIME+"/"+sample+"/calls/"+sample+".MuTect.annotatedFull.txt")]
            TARGET +=[subject+"/"+TIME+ACT_DIR+sample+".unionSomaticVarsFull.txt"]
            ## remove expressed calls
            ##if sample in config['sample_RNASeq'].keys():
            ##	local = [w.replace('annotated','annotated.expressed') for w in local]
        UNION_SOM_MUT[sample] = local
#        TARGET +=[subject+"/"+TIME+ACT_DIR+sample+".unionSomaticVarsFull.txt"]
############
#       Union Somatic Calls
############
rule UnionSomaticCalls:
        input:
            Files=lambda wildcards: UNION_SOM_MUT[wildcards.sample]
        output: 
            "{base}/{sample}.unionSomaticVarsFull.txt"
        params:
            rulename = "UnionSomaticCalls",
            batch    = config[config['host']]['job_default'],
            tool     = NGS_PIPELINE + "/scripts/" + config["UnionSomaticCalls"]
        shell: """
        #######################
        python3 {params.tool} {input.Files} >{output}
        #######################
        """
