# coding: utf-8
###############
#RNASeq_QC rule: It creates the RNAseqMetrics.txt file which is further used in RNASeqQC_2 rule for TranscriptCoverage plot
#Reason for two separate rules is to avoid wildcard errors and create the plot at patient level qc
###############

rule RNASeqQC:
	input:
                bam="{base}/{TIME}/{sample}/{sample}.star.dd.bam",
                bai="{base}/{TIME}/{sample}/{sample}.star.dd.bam.bai",
                rna_interval=config['rRNA_interval'],
                ref_flat=config['ref_flat']
	output:
                table="{base}/{TIME}/{sample}/qc/{sample}.RnaSeqMetrics.txt"
	version:config["picard"],
	params:
		rulename  = "RNASeqQC",
		R         = config['version_R'],
		batch     = config[config['host']]["job_markdup"],
	shell: """
        #######################
        module load picard/{version}
        module load R/{params.R}
        java -Xmx${{MEM}}g -Djava.io.tmpdir=${{LOCAL}} -jar $PICARD_JAR CollectRnaSeqMetrics STRAND_SPECIFICITY=NONE VALIDATION_STRINGENCY=SILENT REF_FLAT={input.ref_flat} RIBOSOMAL_INTERVALS={input.rna_interval} INPUT={input.bam} OUTPUT={output.table} 
        #######################
        """


rule RNASeqQC_transcov:
	input:
		files = lambda wildcards: SUB_QC[wildcards.subject],
		convertor=NGS_PIPELINE+"/scripts/transcript_coverage.R"
	output:
		plot="{subject}/{TIME}/qc/{subject}.transcriptCoverage.png"
	version:config['version_R']
	params:
		rulename  = "RNASeqQC_2",
		batch     = config[config['host']]["job_covplot"]
	shell: """
       #######################
	module load R/{version}
        {input.convertor} -f "{input.files}" -s "{wildcards.subject}" -o {output.plot}
       #######################
        	"""

##################
# RNASeqQC_star
##################
rule RNASeqQC_star:
	input:
		bam="{base}/{TIME}/{sample}/{sample}.star.dd.bam",
		bai="{base}/{TIME}/{sample}/{sample}.star.dd.bam.bai",
		rna_interval=config['rRNA_interval'],
		gtf=config["gencode_collapsed_gtf"],
		ref=config["reference"],
	output: "{base}/{TIME}/{sample}/qc/rnaseqc/report.html"
	version: config["rnaseqc"],
	params:
		rulename="RNASeQC_star",
		R       =config['version_R'],
		picard  =config["picard"],
		batch   = config[config['host']]["job_STAR"],
		home      = WORK_DIR,
	shell: """
        ###########################
	module load rnaseqc/{version}
	module load  picard/{params.picard}
	module load R/{params.R}
	if [ -d "{params.home}/{wildcards.base}/{TIME}/{wildcards.sample}/qc/rnaseqc" ]; then rm -Rf {params.home}/{wildcards.base}/{TIME}/{wildcards.sample}/qc/rnaseqc; fi
	java -Xmx${{MEM}}g  -Djava.io.tmpdir=${{LOCAL}} -jar $RNASEQCPATH/RNA-SeQC_v1.1.8.jar   -r {input.ref} -rRNA {input.rna_interval} -o {wildcards.base}/{TIME}/{wildcards.sample}/qc/rnaseqc  -s "{wildcards.sample}|{input.bam}|{wildcards.sample}" -t {input.gtf}
        ###########################
        """


