
if 'RNASeq' in config:
        #The subjects in this list have at least one transcriptome library. 
        for subject in SUB_RNASEQ:
                #All the transcriptome libraries for the subject are in this list.              
                for sample in SAM_RNASEQ[subject]:
                        TARGET_R += [subject+"/"+TIME+"/"+sample+"/fusion/tophat-fusion.txt"]
#       Tophat
############
rule TOPHAT:
        input:  R=lambda wildcards: FQ[wildcards.sample],
        output:
                temp("{base}/{TIME}/{sample}/tophat_{sample}/accepted_hits.bam"),
                temp("{base}/{TIME}/{sample}/tophat_{sample}/accepted_hits.bam.bai")
        version: config["tophat"]
        params:
                rulename  = "TOPHAT",
                samtools  = config['samtools'],
                batch     = config[config['host']]["job_tophat"],
                ref       = config['Bowtie2Index']
        shell: """
        #######################
        module load tophat/{version}
        module load samtools/{params.samtools}
        tophat -p ${{THREADS}} -o ${{LOCAL}} --keep-fasta-order --rg-id {wildcards.sample} --no-coverage-search --rg-sample {wildcards.sample} --rg-library {wildcards.sample} --rg-platform ILLUMINA --fusion-search --fusion-min-dist 100000 --mate-inner-dist 84 --mate-std-dev 74 {params.ref} {input.R[0]} {input.R[1]}
        cp -rf ${{LOCAL}}/* {wildcards.base}/{TIME}/{wildcards.sample}/tophat_{wildcards.sample}/
        samtools index {wildcards.base}/{TIME}/{wildcards.sample}/tophat_{wildcards.sample}/accepted_hits.bam
        #######################
        """
############

#       Tophat-fusion
############
rule TOPHAT_FUSION:
        input:
                "{base}/{TIME}/{sample}/tophat_{sample}/accepted_hits.bam",
                "{base}/{TIME}/{sample}/tophat_{sample}/accepted_hits.bam.bai"
        output:
                "{base}/{TIME}/{sample}/tophatfusion_out/result.txt",
                "{base}/{TIME}/{sample}/fusion/tophat-fusion.txt"
        version: config["tophat"]
        params:
                rulename = "TOPHAT_FUSION",
                blast    =config['version_blast'],
                batch    =config[config['host']]['job_tophatPost'],
                ref      =config['BowtieIndex'],
                bowtie   =config['bowtie'],
                tp_ref   =config['tophat_post_ref']
        shell: """
        #######################
        module load tophat/{version}
        module load bowtie/{params.bowtie}
        module load blast/{params.blast}
        cd {wildcards.base}/{TIME}/{wildcards.sample}/
        rm -f blast ensGene.txt ensGtp.txt mcl refGene.txt
        ln -s {params.tp_ref}/* .
        tophat-fusion-post -p ${{THREADS}} --num-fusion-pairs 1 {params.ref}
        rm blast ensGene.txt ensGtp.txt mcl refGene.txt
        sed -i  '1s/^/Sample\\tGene_left\\tChr_left\\tCoordinate_left\\tGene_right\\tChr_right\\tCoordinate_right\\t#SpanningReads\\t#SpanningMatePairs\\t#SpanningMateEndOfPair\\tScore\\n/' tophatfusion_out/result.txt
        ln -sf ../tophatfusion_out/result.html fusion/tophat-fusion.html
        ln -sf ../tophatfusion_out/result.txt  fusion/tophat-fusion.txt
        #######################
        """
############

